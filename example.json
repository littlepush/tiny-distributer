// tiny-distributer -- a C++ tcp distributer application for Linux/Windows/iOS
// Copyright (C) 2014  Push Chen

// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; either version 2 of the License, or
// (at your option) any later version.

// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License along
// with this program; if not, write to the Free Software Foundation, Inc.,
// 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

// You can connect me by email: littlepush@gmail.com, 
// or @me on twitter: @littlepush

// A tinydst instance can start up multiple services at once.
// The configuration file is in JSON format, and a service config is 
// a Json dictionary.
// One service config is in the following format:
// 	"server_name" : {
//		"server" : "SERVER_TYPE",
// 		"port" : LISTEN_PORT,
//		"bind" : "BIND INTERFACE IP ADDRESS",
//		"src" : [
//			"ACCEPT SOURCE IP RANGE
//		]
//	}
//	Server Type includes the following 4 option:
//	TCPRELAY: it's a tcp relay service, accept any connection modified by iptables
//			  and redirect to its original destination.
//  REDIRECT: accept any connection and redirect to the desitination in the config.
//  SOCKS5:	  an easy socks5 proxy.
//  BACKDOOR: hook any other tinydst service, duplicate and redirect the request and
//			  response to the client.

//  `bind` is an optional property, in default is "0.0.0.0"
//  `src` is also an optional property, the incoming connection will be filted according
//		to `src` list.

{
// An Example tcp relay service
	"tcprelay_example": {
		"server": "TCPRELAY",
		"port": 3880,
		"bind": "127.0.0.1",
		"src": [ 
			"127.0.0.1",
			"128.168.1.0/24"
		],
		// any redirect service support the `socks5` config.
		"socks5": {
			"addr": "127.0.0.1", 
			"port": 3882
		}
	},
// An Example redirect service
	"redirect_example": {
		"server": "REDIRECT",
		"port": 3881,
		// `dst` is the destination list for the redirect service
		// the service will connect & redirect data to only dst once a time.
		// when the first configed server cannot be reached, then
		// the redirect service will try to connect to the second,
		// until all destinations are down.
		"dst": [
			{
				"addr": "192.168.1.2",
				"port": 3881,
				"socks5": [
					{
						"addr": "127.0.0.1", 
						"port": 3882
					}
				]
			},
			{
				"addr": "192.168.1.3",
				"port": 3881
			},
			{
				"addr": "192.168.1.4",
				"port": 3881
			}
		]
	},
// An Example socks5 service
	"socks5_example": {
		"server": "SOCKS5",
		"port": 3882,
		// `socks5 is an optional property`
		"socks5": {
			"addr": "127.0.0.1",
			"port": 4098
		}
	},
// Backdoor service
	"backdoor-server": {
		"server": "BACKDOOR",
		"port": 3883,
		"listen": "socks5_example",
		// Only redirect the request data.
		"request": true,
		"response": false
	}
}
